#!/bin/bash

#          ,.,
#         MMMM_    ,..,
#           "_ "__"UVER          ,.......,,
#    ,..., __." --"    ,.,     _-"UFACILITY
#    "UCORE___ "_._   MMM"_."" _ """"""""""
#    """""    "" , \_.   "_. ."
#           ,., _"__ \__./ ."
#          MMMMM_"  "_    ./
#           ''''      (    )
#    ._______________.-'____"---._.
#     \                          /
#      \________________________/
#      (_)                    (_)
#
# Should be called after ./env as a separated call inside of ~./bashrc. Therefore,
# letting users to be able to override locally any environment value that was previously set
# during the ./env execution.

# checking if it's being triggered under upipe domain
if [ -z "$UPIPE_ROOT" ]; then
  echo "UPIPE_ROOT IS NOT SET, ARE YOU UNDER UPIPE ENV ?"
else

  # by default the version of the versioned depedencies is driven by their
  # respective version environment. However when ubash is set to "stable" or
  # "beta" this value can be used to drive the defaults of the versioned depedencies
  # that have not been defined yet
  if [ "$UBASH_VERSION" == "stable" ] || [ "$UBASH_VERSION" == "beta" ]; then

    # in case ufacility version has not been defined
    if [ -z "$UFACILITY_VERSION" ]; then
      export UFACILITY_VERSION=$UBASH_VERSION
    fi

    # in case uver version has not been defined
    if [ -z "$UVER_VERSION" ]; then
      export UVER_VERSION=$UBASH_VERSION
    fi

    # in case ucore version has not been defined
    if [ -z "$UCORE_VERSION" ]; then
      export UCORE_VERSION=$UBASH_VERSION
    fi
  fi

  # initializing depedencies:
  # ufacility
  source $UFACILITY_ROOT/$UFACILITY_VERSION/init

  # uversion
  source $UVER_ROOT/$UVER_VERSION/init

  # ucore
  source $UCORE_ROOT/$UCORE_VERSION/init
fi
